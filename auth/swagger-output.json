{
  "swagger": "2.0",
  "info": {
    "title": "Vjiou",
    "description": "API Documentation for Vjiou API",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Routes for user authentication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "exampleuser"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered user and returned token",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Invalid request body or user already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login a user",
        "description": "Routes for user authentication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "exampleuser"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in user and returned token",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Invalid credentials or request body",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/stream-key": {
      "get": {
        "tags": [
          "Stream"
        ],
        "summary": "Get stream key",
        "description": "Route to get the stream key of the authenticated user",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved stream key",
            "schema": {
              "$ref": "#/definitions/StreamKey"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied or invalid token",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key": {
      "post": {
        "tags": [
          "Key"
        ],
        "summary": "Create a random stream key",
        "description": "Route to create a new random stream key for the authenticated user",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created stream key",
            "schema": {
              "$ref": "#/definitions/StreamKey"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied or invalid token",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key/{id}": {
      "delete": {
        "tags": [
          "Key"
        ],
        "summary": "Delete a stream key",
        "description": "Route to delete an existing stream key",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted stream key"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied or invalid token",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Key not found or not authorized to delete",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "example": "string"
        }
      }
    }
  },
  "apis": [
    "./routes/*.js"
  ]
}